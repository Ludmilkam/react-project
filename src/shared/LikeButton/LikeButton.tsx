import { useContext, useState } from "react";
import { likesContext } from "../App";
import { usePostById } from "../../hooks/usePostById";
import { useParams } from "react-router-dom";
import "./LikeButton.css"

export function LikeButton() {
    const [isLike, setIsLike] = useState(false); 
    // –±–µ–¥–Ω—è–∂–∫–∏ –º–æ–∏ –∏–¥–µ–∏...
    // const [disabled, setDisabled] = useState(false); 
    const {setLiked, delLike} = useContext(likesContext)
    const params = useParams();
    const { post } = usePostById(Number(params.id));

    // –ò —á–µ–º –≤–∞–º –º–æ–∏ —Å–ø–æ—Å–æ–±—ã –Ω–µ –Ω—Ä–∞–≤—è—Ç—Å—èüôÑ
    // –æ–ø—è—Ç—å –≤—Å–µ –ø–µ—Ä–µ–¥–µ–ª—ã–≤–∞—Ç—å

    // –¢–∏–ø–æ —Å–ø–æ—Å–æ–± 1
    // function notLiked() {
    //     if (like < 1 && like >= 0) {
    //         setLike(like + 1)
    //     } else if (like == 1) {
    //         setLike(like - 1)
    //     }
    // }
    // –¢–∏–ø–æ —Å–ø–æ—Å–æ–± 2 —Å disabled
    // function notLiked() {
    //     if (like < 1 && like >= 0) {
    //         setLike(like + 1);
    //         setDisabled(true);
    //     }
    //     if (post){
    //         setLiked(post)
    //     }
    // }
    // 3 —Å–ø–æ—Å–æ–± –∏–±–æ –ø—Ä–æ—à–ª—ã–µ —Ç—ã –∑–∞–±—Ä–∞–∫–æ–≤–∞–ª
    // –Ω—É –æ–Ω–æ –∂ —Ä–∞–±–æ—Ç–∞–µ—Ç
    function toggleLike(){
        if (post && isLike) {
            delLike(post.id); 
        } else if (post) {
            setLiked(post); 
            
        }
        setIsLike(!isLike)
    }


    return (
        // <div>
        //     <h2>Likes: {like} </h2>
        //     {/* –û—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ —Å–ø–æ—Å–æ–±—É 1 */}
        //     {/* <button onClick={notLiked}>
        //             –ù—É –¥–æ–ø—É—Å—Ç–∏–º –ª–∞–π–∫
        //         </button> */}
        //     {/* –û—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ —Å–ø–æ—Å–æ–±—É 2 */}
        //     <button className="like" onClick={notLiked} disabled={disabled}>
        //         –¢–∏–ø–æ –ª–∞–π–∫
        //     </button>
        // </div>
        <div>
            <h2>Likes: {isLike ? 1: 0} </h2>
            <button className={`like ${!isLike ? "delLike": ""}`} onClick={toggleLike}>
                –¢–∏–ø–æ –ª–∞–π–∫
            </button>

        </div>
    );
}
