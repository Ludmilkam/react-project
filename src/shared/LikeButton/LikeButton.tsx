import { useContext, useState } from "react";
import { useLikesContext } from "../../context/LikesContext";
import { usePostById } from "../../hooks/usePostById";
import { useParams } from "react-router-dom";
import "./LikeButton.css";
import { IPost } from "../../types/interfaces";

interface ILikeButtonProps{
    post: IPost
}

export function LikeButton(props: ILikeButtonProps) {
    // –ò–∑-–∑–∞ —Ç–æ–≥–æ —á—Ç–æ —è —É–±—Ä–∞–ª–∞ —ç—Ç–æ—Ç —é–∑ —Å—Ç–µ–π—Ç —è –ø–æ—Ç—Ä–∞—Ç–∏–ª–∞ —Å—É—Ç–∫–∏ (–≤–∞—à–∏—Ö 15 –º–∏–Ω) —á—Ç–æ–± –≤—Å–µ –ø–æ—á–∏–Ω–∏—Ç—å
    // const [isLike, setIsLike] = useState(false);
    // –±–µ–¥–Ω—è–∂–∫–∏ –º–æ–∏ –∏–¥–µ–∏...
    // const [disabled, setDisabled] = useState(false);
    // const {posts} = useContext(postsContext)
    const { setLiked, delLike, isLiked } = useLikesContext();
    const {post} = props
    // const params = useParams();
    // const { post } = usePostById(Number(params.id));

    // –ò —á–µ–º –≤–∞–º –º–æ–∏ —Å–ø–æ—Å–æ–±—ã –Ω–µ –Ω—Ä–∞–≤—è—Ç—Å—èüôÑ
    // –æ–ø—è—Ç—å –≤—Å–µ –ø–µ—Ä–µ–¥–µ–ª—ã–≤–∞—Ç—å

    // –¢–∏–ø–æ —Å–ø–æ—Å–æ–± 1
    // function notLiked() {
    //     if (like < 1 && like >= 0) {
    //         setLike(like + 1)
    //     } else if (like == 1) {
    //         setLike(like - 1)
    //     }
    // }
    // –¢–∏–ø–æ —Å–ø–æ—Å–æ–± 2 —Å disabled
    // function notLiked() {
    //     if (like < 1 && like >= 0) {
    //         setLike(like + 1);
    //         setDisabled(true);
    //     }
    //     if (post){
    //         setLiked(post)
    //     }
    // }
    // 3 —Å–ø–æ—Å–æ–± –∏–±–æ –ø—Ä–æ—à–ª—ã–µ —Ç—ã –∑–∞–±—Ä–∞–∫–æ–≤–∞–ª
    // –Ω—É –æ–Ω–æ –∂ —Ä–∞–±–æ—Ç–∞–µ—Ç
    function toggleLike() {
        if (post) {
            if (isLiked(post.id)) {
                delLike(post.id);

            } else {
                setLiked(post);
            }
        }
    }

    return (
        // <div>
        //     <h2>Likes: {like} </h2>
        //     {/* –û—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ —Å–ø–æ—Å–æ–±—É 1 */}
        //     {/* <button onClick={notLiked}>
        //             –ù—É –¥–æ–ø—É—Å—Ç–∏–º –ª–∞–π–∫
        //         </button> */}
        //     {/* –û—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ —Å–ø–æ—Å–æ–±—É 2 */}
        //     <button className="like" onClick={notLiked} disabled={disabled}>
        //         –¢–∏–ø–æ –ª–∞–π–∫
        //     </button>
        // </div>
        <div>
            <h2>Likes: {post && isLiked(post.id) ? 1 : 0}</h2>
            <button
                className={`like ${post && isLiked(post.id) ? "delLike" : ""}`}
                onClick={toggleLike}
            >
                –¢–∏–ø–æ –ª–∞–π–∫
            </button>
        </div>
    );
}
